#!/bin/bash
#----------------------------------------------------------------------
# Set base16 color.  Mom and Dad a simple tribute to my parents.
#----------------------------------------------------------------------
function mom() {
  base16Color $1 dark
}
function dad() {
  base16Color $1 light
}
function ct() {
  cd ~/git/dotfiles/color/base16-shell && ./colortest && cd -
}
function base16Color() {
  source ~/git/dotfiles/color/base16-shell/base16-$1.$2.sh
  echo "Base16 color: " $1 $2
}
#mom paraiso

#-------------------------------------------------------------------------------
# Operating system specif settings.
#-------------------------------------------------------------------------------
echo "Operating system: " ${OSTYPE}
if [[ ${OSTYPE} =~ "darwin" ]]; then
    export CLICOLOR=1
    export LSCOLORS=GxFxBxDxCxegedabagacad
    export PATH="${HOME}/Library/Haskell/bin:${PATH}"
    export TERM=xterm-256color
    alias me='source ~/.bash_profile'
    alias la='ls -A'
    alias ll='ls -lahG'
    if [[ ${HOSTNAME} =~ "Stooges" ]]; then
      alias fpc0='sshfs fpc:git/smart-device-sw /Volumes/Larry/fpc0'
      alias ufpc0='umount /Volumes/Larry/fpc0'
    else
      alias fpc0='sshfs fpc:git/smart-device-sw ~/fpc0'
      alias ufpc0='umount ~/fpc0'
    fi
    alias vim='mvim -v'
elif [[ ${OSTYPE} =~ "linux" ]]; then
    export PATH="${HOME}/.cabal/bin:${PATH}"
    export TERM=xterm
    alias me='source ~/.bashrc'
    alias la='ls -A --color'
    alias ll='ls -lahG --color'
else
    echo "Unknown operating system:" ${OSTYPE}
fi
#-------------------------------------------------------------------------------
# Use vim keybinds
#-------------------------------------------------------------------------------
#set -o vi

#-------------------------------------------------------------------------------
# Haskell and Cabal
#-------------------------------------------------------------------------------
alias ci='cabal install'
alias cif='cabal install --force-reinstalls'
alias cemacs='emacs -Q -l ~/git/emacs-haskell-config/init.el'
alias cls='clear'

#-------------------------------------------------------------------------------
# General purpose aliases.
#-------------------------------------------------------------------------------
alias decrypt='~/git/dotfiles/decrypt'
alias ec='emacsclient -c' 
alias egrep='egrep --color=auto'
alias encrypt='~/git/dotfiles/encrypt' 
alias fgrep='fgrep --color=auto'
alias grep='grep --color=auto'
alias h='history'

#-------------------------------------------------------------------------------
# Aliases to folders within my Git root.
#-------------------------------------------------------------------------------
alias atf='cd ~/git/smart-device-sw/doc/automated-test'
alias ac='cd ~/git/AllanConsulting'
alias dhf='cd ~/git/smart-device-sw/doc/dhf'
alias doc='cd ~/git/smart-device-sw/doc'
alias dot='cd ~/git/dotfiles/'
alias gh='cd ~/git/GaryHoward'
alias hh='cd ~/git/HowardHouse'

#------------------------------------------------------------------------------- 
# A function to grep my command history
#------------------------------------------------------------------------------- 
function hg() {
  history | grep "$1"
}

#------------------------------------------------------------------------------- 
# File & String related functions
#------------------------------------------------------------------------------- 
function ff()  { find . -type f -iname "$1" -print ; }
function ffr() { find . -name "$1" -exec bash -c 'rm -rf' \;; } 

#-------------------------------------------------------------------------------
# Use vim to read man pages.
#-------------------------------------------------------------------------------k
function man() { 
  vim -c "Man $1 $2" -c 'silent only' ; 
}
#-------------------------------------------------------------------------------k
# Use asciidoctor to create a pdf document.
#-------------------------------------------------------------------------------k
function apdf() {
  f=$(basename "$1")
  f="${f%.*}"
  time asciidoctor --trace --require asciidoctor-pdf \
              --backend pdf \
              --attribute pdf-style=$HOME/git/dotfiles/asciidoctor/basic-theme.yml \
              --out-file pdf/"$f".pdf \
              "$1" ;
}
function a2l() {
  asciidoctor-latex --no-header-footer --safe-mode=secure "$1" ;
}
#-------------------------------------------------------------------------------
# Git helpers
#-------------------------------------------------------------------------------
function gce() {
  if [[ "amgen" = $1 ]]; then
    git config --local user.name gahoward
    git config --local user.email gahoward@amgen.com
  elif [[ "mhp" = $1 ]]; then
    git config --local user.name ghoward
    git config --local user.email gahoward@mhealthpharma.com
  elif [[ "traap" = $1 ]]; then
    git config --local user.name Traap
    git config --local user.email gary.a.howard@mac.com
  else
    echo "Usage: gce [amgen|mhp|traap]"
    echo "Found: " $1
  fi
  git config --local --get user.name
  git config --local --get user.email
}

#-------------------------------------------------------------------------------
# Prompt
#-------------------------------------------------------------------------------
export PS1='\[\033[01;31m\]\u\[\033[00m\]\[\033[01;33m\]@\[\033[00m\]\[\033[01;34m\]\h\[\033[00m\]\[\033[01;32m\]:\[\033[00m\]\[\033[01;35m\]\w\[\033[00m\]\[\033[01;36m\]\n\$\[\033[00m\] '

#----------------------------------------------------------------------
# Disable featrues / programs running on OSX.
#----------------------------------------------------------------------
function msa() { Launchctl remove com.microsoft.SyncServicesAgent ; }
function pah() { defaults write -g ApplePressAndHoldEnable -bool false ; }

#----------------------------------------------------------------------
# Set terminal title.
#----------------------------------------------------------------------
function title() { echo -n -e "\033]0;$1\007"; }

#----------------------------------------------------------------------
# Docker machine
#----------------------------------------------------------------------
function sdm() {
  docker-machine env
  eval "$(docker-machine env default)"
  docker-machine start
}
function docker-gc() {
  docker ps --no-trunc -aq | xargs docker rm
  docker images -f "dangling=true" -q | xargs docker rmi
}
#----------------------------------------------------------------------
