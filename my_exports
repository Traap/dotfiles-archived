#!/bin/bash
# ------------------------------------------------------------------------------
# 256 colors.
# ------------------------------------------------------------------------------
export TERM=xterm-256color

# ------------------------------------------------------------------------------
# Operating system specific settings.
# ------------------------------------------------------------------------------
if [[ ${OSTYPE} =~ "darwin" ]]; then
  export CLICOLOR=1
  export LSCOLORS=GxFxBxDxCxegedabagacad
elif [[ ${OSTYPE} =~ "linux" ]] \
  || [[ ${OSTYPE} =~ "cygwin" ]] \
  || [[ ${OSTYPE} =~ "msys" ]] ; then
  if [[ ${OSTYPE} =~ "cygwin" ]]; then
    export HOMEDRIVE="C:"
    export HOMESHARE=${HOME}
  fi
else
    echo "Unknown operating system:" ${OSTYPE}
fi

# ------------------------------------------------------------------------------
# amber location.
# ------------------------------------------------------------------------------
if dirExists ${HOME}/git/amber; then
   AMBERPATH=${HOME}/git/amber
elif dirExists ${HOME}/bb/amber; then
     AMBERPATH=${HOME}/bb/amber
else
  AMBERPATH=""
  echo "WARNING: amber is not installed."
fi
export AMBERPATH

if [[ -d ${AMBERPATH} ]]; then
  newfactoryitem() {
    ${AMBERPATH}/bin/newfactoryitem $@
  }
fi

# ------------------------------------------------------------------------------
# autodoc location.
# ------------------------------------------------------------------------------
if  dirExists ${HOME}/git/autodoc; then
  AUTODOCPATH=${HOME}/git/autodoc
elif dirExists ${HOME}/bb/autodoc; then
   AUTODOCPATH=${HOME}/bb/autodoc
else
  echo "WARNING: autodoc is not installed."
  AUTODOCPATH=""
fi
export AUTODOCPATH

# ------------------------------------------------------------------------------
# docbld location and function.  These must go together.
# ------------------------------------------------------------------------------
if dirExists ${HOME}/git/docbld; then
  DOCBLDPATH=${HOME}/git/docbld
elif dirExists ${HOME}/bb/docbld; then
    DOCBLDPATH=${HOME}/bb/docbld
else
  echo "WARNING: docbld is not installed."
  DOCBLDPATH=""
fi
export DOCBLDPATH

if [[ -d ${DOCBLDPATH} ]]; then
  docbld() {
    rake --rakefile ${DOCBLDPATH}/Rakefile $1
  }
fi


# ------------------------------------------------------------------------------
# Vim clipboard for Linux.
# ------------------------------------------------------------------------------
if [[ ${OSTYPE} =~ "linux" ]]; then
  export DISPLAY=localhost:0.0
fi

# ------------------------------------------------------------------------------
# emend location and function.  These must go together.
# ------------------------------------------------------------------------------
if dirExists ${HOME}/git/emend; then
  EMENDPATH=${HOME}/git/emend
else
  EMENDPATH=""
fi
export EMENDPATH

if [[ -d ${EMENDPATH} ]]; then
  newcomponent() {
    ${EMENDPATH}/bin/newcomponent $@
  }
fi

# ------------------------------------------------------------------------------
# Ruby Gem locations.
# ------------------------------------------------------------------------------
if programExists gem; then
  export GEM_HOME=${HOME}/.gem
  export GEM_PATH=${HOME}/.gem/bin
fi

# ------------------------------------------------------------------------------
# GIT_HOME is needed for test automation framework.
# ------------------------------------------------------------------------------
if dirExists ${HOME}/git; then
  export GIT_HOME=${HOME}/git
else
  echo "WARNING: ${HOME}/git does not exists."
fi

# ------------------------------------------------------------------------------
# JAVA locations.
# ------------------------------------------------------------------------------
if dirExists ${HOME}/build/lclasses/main; then
  CLASSPATH=build/classes/main:build/classes/test
  export CLASSPATH
fi

# ------------------------------------------------------------------------------
# newdoc location and functions.  These must go together.
# ------------------------------------------------------------------------------
if dirExists ${HOME}/git/newdoc; then
  NEWDOCPATH=${HOME}/git/newdoc
elif dirExists ${HOME}/bb/newdoc; then
    NEWDOCPATH=${home}/bb/newdoc
else
  echo "WARNING: newdoc is not installed."
  NEWDOCPATH=""
fi
export NEWDOCPATH

if [[ -d ${NEWDOCPATH} ]]; then
  newdoc() {
    ${NEWDOCPATH}/newdoc "$@"
  }
fi

# ------------------------------------------------------------------------------
# Perforce defaults.
# ------------------------------------------------------------------------------
if [[ ${OSTYPE} =~ "linux" ]]; then
  if [[ ${HOSTNAME} =~ "Ryder" ]]; then
    export P4DISK=/Volumes/Larry
    export P4HOST=localhost
    export P4PORT=1666
    export P4ROOT=${P4DISK}/p4root
    export P4CLIENT=Gary:on:Ryder
  fi
fi
